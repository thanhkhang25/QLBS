/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import BUS.DonXinNghiBUS;
import DTO.DonXinNghi;
import SESSION.CurrentSession;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.time.temporal.ChronoUnit;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class ThemTBN extends javax.swing.JFrame {

    /**
     * Creates new form ThemNV
     */
    // Định dạng ngày chuẩn
    private final DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    public ThemTBN() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        // Cho phép cửa sổ nhận focus
        setFocusableWindowState(true);
        // Cập nhật thông tin nhân viên từ phiên đăng nhập
        txtMaNhanVien.setText(String.valueOf(CurrentSession.getMaNV()));
        txtTenNhanVien.setText(CurrentSession.getTenNV());

        // Cho phép người dùng nhập vào ô ngày bắt đầu, số ngày nghỉ, và ngày kết thúc
        txtNgayBatDau.setEditable(true);
        txtSoNgayNghi.setEditable(true);
        txtNgayKetThuc.setEditable(true);

        // Thêm listener cho txtSoNgayNghi: khi mất focus, tự tính ngày kết thúc dựa trên ngày bắt đầu
        txtSoNgayNghi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                updateNgayKetThucFromSoNgay();
            }
        });
        // Thêm listener cho txtNgayKetThuc: khi mất focus, tự tính số ngày nghỉ dựa trên ngày bắt đầu
        txtNgayKetThuc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                updateSoNgayFromNgayKetThuc();
            }
        });
    }
    // Phương thức tính toán ngày kết thúc từ ngày bắt đầu và số ngày nghỉ
    private void updateNgayKetThucFromSoNgay() {
        String startStr = txtNgayBatDau.getText().trim();
        String soNgayStr = txtSoNgayNghi.getText().trim();
        if(startStr.isEmpty() || soNgayStr.isEmpty()){
            return;
        }
        try {
            LocalDate ngayBatDau = LocalDate.parse(startStr, dtf);
            int soNgay = Integer.parseInt(soNgayStr);
            // Giả sử: Ngày kết thúc = ngày bắt đầu + số ngày nghỉ (có thể điều chỉnh nếu cần)
            LocalDate ngayKetThuc = ngayBatDau.plusDays(soNgay);
            txtNgayKetThuc.setText(ngayKetThuc.format(dtf));
        } catch (DateTimeParseException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi định dạng ngày hoặc số ngày nghỉ: " + ex.getMessage());
        }
    }
    
    // Nếu bạn muốn cho phép nhập ngày kết thúc và tự động tính số ngày nghỉ, bạn có thể thêm:
    private void updateSoNgayFromNgayKetThuc() {
        String startStr = txtNgayBatDau.getText().trim();
        String endStr = txtNgayKetThuc.getText().trim();
        if(startStr.isEmpty() || endStr.isEmpty()){
            return;
        }
        try {
            LocalDate ngayBatDau = LocalDate.parse(startStr, dtf);
            LocalDate ngayKetThuc = LocalDate.parse(endStr, dtf);
            // Tính số ngày nghỉ là hiệu của hai ngày (có thể điều chỉnh theo nghiệp vụ)
            int soNgay = (int) java.time.temporal.ChronoUnit.DAYS.between(ngayBatDau, ngayKetThuc);
            txtSoNgayNghi.setText(String.valueOf(soNgay));
        } catch (DateTimeParseException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi định dạng ngày: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jPasswordField1 = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPasswordField2 = new javax.swing.JPasswordField();
        pnlThemTBN = new javax.swing.JPanel();
        lblMaNhanVien = new javax.swing.JLabel();
        lblTenNhanVien = new javax.swing.JLabel();
        lblNgayBatDau = new javax.swing.JLabel();
        lblLyDo = new javax.swing.JLabel();
        lblSoNgayNghi = new javax.swing.JLabel();
        lblNgayKetThuc = new javax.swing.JLabel();
        txtMaNhanVien = new javax.swing.JTextField();
        txtTenNhanVien = new javax.swing.JTextField();
        txtNgayBatDau = new javax.swing.JTextField();
        txtSoNgayNghi = new javax.swing.JTextField();
        txtNgayKetThuc = new javax.swing.JTextField();
        cmbLyDo = new javax.swing.JComboBox<>();
        btnThem = new javax.swing.JButton();
        lblThemTBN = new javax.swing.JLabel();

        jPasswordField1.setText("jPasswordField1");

        jScrollPane1.setViewportView(jEditorPane1);

        jPasswordField2.setText("jPasswordField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(186, 224, 243));
        setFocusTraversalPolicyProvider(true);
        setFocusableWindowState(false);
        setResizable(false);

        pnlThemTBN.setBackground(new java.awt.Color(186, 224, 243));
        pnlThemTBN.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblMaNhanVien.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblMaNhanVien.setText("Mã Nhân Viên");

        lblTenNhanVien.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTenNhanVien.setText("Tên Nhân Viên");

        lblNgayBatDau.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblNgayBatDau.setText("Ngày Bắt đầu");

        lblLyDo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblLyDo.setText("Lý Do");

        lblSoNgayNghi.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblSoNgayNghi.setText("Số Ngày Nghỉ");

        lblNgayKetThuc.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblNgayKetThuc.setText("Ngày Kết Thúc");

        txtMaNhanVien.setEditable(false);
        txtMaNhanVien.setEnabled(false);

        txtTenNhanVien.setEditable(false);
        txtTenNhanVien.setEnabled(false);

        cmbLyDo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Xin nghỉ việc", "Nghỉ thai sản", "Lý do khác(bệnh, gia đình)" }));

        btnThem.setBackground(new java.awt.Color(0, 71, 171));
        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnThem.setForeground(new java.awt.Color(237, 242, 251));
        btnThem.setText("Thêm");
        btnThem.setToolTipText("");
        btnThem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        lblThemTBN.setBackground(new java.awt.Color(186, 224, 243));
        lblThemTBN.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        lblThemTBN.setForeground(new java.awt.Color(0, 71, 171));
        lblThemTBN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThemTBN.setText("Thêm Thông Báo Nghỉ");
        lblThemTBN.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout pnlThemTBNLayout = new javax.swing.GroupLayout(pnlThemTBN);
        pnlThemTBN.setLayout(pnlThemTBNLayout);
        pnlThemTBNLayout.setHorizontalGroup(
            pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThemTBNLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThemTBNLayout.createSequentialGroup()
                        .addGroup(pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblThemTBN, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                            .addGroup(pnlThemTBNLayout.createSequentialGroup()
                                .addGroup(pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMaNhanVien)
                                    .addComponent(lblTenNhanVien)
                                    .addComponent(lblNgayBatDau)
                                    .addComponent(lblNgayKetThuc)
                                    .addComponent(lblSoNgayNghi))
                                .addGap(53, 53, 53)
                                .addGroup(pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSoNgayNghi, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbLyDo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(16, Short.MAX_VALUE))
                    .addGroup(pnlThemTBNLayout.createSequentialGroup()
                        .addComponent(lblLyDo)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(pnlThemTBNLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlThemTBNLayout.setVerticalGroup(
            pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThemTBNLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblThemTBN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaNhanVien)
                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenNhanVien)
                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNgayBatDau)
                    .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSoNgayNghi)
                    .addComponent(txtSoNgayNghi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNgayKetThuc)
                    .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThemTBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLyDo)
                    .addComponent(cmbLyDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlThemTBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlThemTBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
                // Lấy thông tin từ giao diện
        try {
            int maNV = Integer.parseInt(txtMaNhanVien.getText().trim());
            String tenNV = txtTenNhanVien.getText().trim();  // Từ phiên đăng nhập, không cho sửa
            String ngayBatDauStr = txtNgayBatDau.getText().trim();
            String soNgayStr = txtSoNgayNghi.getText().trim();
            String ngayKetThucStr = txtNgayKetThuc.getText().trim();
            String lyDo = (String) cmbLyDo.getSelectedItem();
            // Kiểm tra ô ngày bắt đầu phải không rỗng
            if (ngayBatDauStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Bạn phải nhập ngày bắt đầu nghỉ!");
                return;
            }
            // Phải nhập ít nhất số ngày nghỉ hoặc ngày kết thúc
            if (soNgayStr.isEmpty() && ngayKetThucStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Bạn phải nhập số ngày nghỉ hoặc ngày kết thúc nghỉ!");
                return;
            }

            LocalDate ngayBatDau;
            try {
                ngayBatDau = LocalDate.parse(ngayBatDauStr, dtf);
            } catch (DateTimeParseException ex) {
                JOptionPane.showMessageDialog(this, "Ngày bắt đầu không hợp lệ! Vui lòng nhập theo định dạng yyyy-MM-dd.");
                return;
            }

            // Điều kiện: ngày bắt đầu phải ít nhất sau ngày hôm nay 1 ngày
            if (!ngayBatDau.isAfter(LocalDate.now())) {
                JOptionPane.showMessageDialog(this, "Ngày bắt đầu nghỉ phải sau ngày hôm nay ít nhất 1 ngày!");
                return;
            }

            int soNgayNghi = 0;
            LocalDate ngayKetThuc = null;
            if (!soNgayStr.isEmpty()) {
                try {
                    soNgayNghi = Integer.parseInt(soNgayStr);
                    if (soNgayNghi <= 0) {
                        JOptionPane.showMessageDialog(this, "Số ngày nghỉ phải lớn hơn 0.");
                        return;
                    }
                    ngayKetThuc = ngayBatDau.plusDays(soNgayNghi);
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Số ngày nghỉ không hợp lệ!");
                    return;
                }
            } else {
                try {
                    ngayKetThuc = LocalDate.parse(ngayKetThucStr, dtf);
                    soNgayNghi = (int) ChronoUnit.DAYS.between(ngayBatDau, ngayKetThuc);
                    if (soNgayNghi <= 0) {
                        JOptionPane.showMessageDialog(this, "Ngày kết thúc phải sau ngày bắt đầu và số ngày nghỉ > 0.");
                        return;
                    }
                } catch (DateTimeParseException ex) {
                    JOptionPane.showMessageDialog(this, "Ngày kết thúc không hợp lệ! Vui lòng nhập theo định dạng yyyy-MM-dd.");
                    return;
                }
            }
            
            // Tạo đối tượng DonXinNghi
            DonXinNghi don = new DonXinNghi();
            don.setMaNV(CurrentSession.getMaNV());
            // maNguoiDuyet ban đầu để NULL vì chưa duyệt
            don.setMaNguoiDuyet(0);  
            // Sử dụng ngày hiện tại làm ngày nộp đơn
            don.setNgayNopDon(java.time.LocalDateTime.now());
            don.setNoiDung(lyDo);
            don.setNgayBatDau(ngayBatDau);
            don.setSoNgayNghi(soNgayNghi);
            // Ngày kết thúc được tính tự động
            // (Nếu bảng sử dụng computed column, bạn có thể không cần set, nhưng nếu cần, set luôn)
            //don.setNgayKetThuc(ngayKetThuc); 
            don.setNgayDuyet(null);
            don.setTrangThai("Chờ duyệt");
            
            // Gọi BUS để thêm đơn xin nghỉ
            DonXinNghiBUS donBUS = new DonXinNghiBUS();
            boolean success = donBUS.addDonXinNghi(don);
            if (success) {
                JOptionPane.showMessageDialog(this, "Thêm đơn xin nghỉ thành công!");
                // Bạn có thể xóa sạch các trường nhập hoặc đóng form
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm đơn xin nghỉ thất bại!");
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnThemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemTBN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemTBN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemTBN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemTBN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemTBN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JComboBox<String> cmbLyDo;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblLyDo;
    private javax.swing.JLabel lblMaNhanVien;
    private javax.swing.JLabel lblNgayBatDau;
    private javax.swing.JLabel lblNgayKetThuc;
    private javax.swing.JLabel lblSoNgayNghi;
    private javax.swing.JLabel lblTenNhanVien;
    private javax.swing.JLabel lblThemTBN;
    private javax.swing.JPanel pnlThemTBN;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtNgayBatDau;
    private javax.swing.JTextField txtNgayKetThuc;
    private javax.swing.JTextField txtSoNgayNghi;
    private javax.swing.JTextField txtTenNhanVien;
    // End of variables declaration//GEN-END:variables
}
