/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import java.awt.Toolkit;
import java.awt.Window;
import java.awt.event.WindowEvent;
import BUS.TaiKhoanBUS;
import DTO.TaiKhoan;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Windows
 */
public class QuanLyTaiKhoan extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyNhanVien
     */
    // Khai báo biến BUS và TableModel
    private TaiKhoanBUS tkBUS;
    private DefaultTableModel tableModel;
    public QuanLyTaiKhoan() {
        initComponents();        
        tkBUS = new TaiKhoanBUS();
        initTable();
        loadDataTaiKhoan();
        // Khi chọn một dòng trong bảng, hiển thị thông tin vào panel chi tiết
        tblQuanLyTaiKhoan.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = tblQuanLyTaiKhoan.getSelectedRow();
                if (selectedRow >= 0) {
                    // Các cột theo thứ tự: 0: Mã NV, 1: Tên NV, 2: Chức Vụ, 3: Chi nhánh, 4: Mật khẩu, 5: Trạng thái
                    txtMaTaiKhoan.setText(tableModel.getValueAt(selectedRow, 0).toString());
                    txtMaNhanVien.setText(tableModel.getValueAt(selectedRow, 1).toString());
                    txtTenNhanVien.setText(tableModel.getValueAt(selectedRow, 2).toString());
                    txtMatKhau.setText(tableModel.getValueAt(selectedRow, 5).toString());
                    txtChiNhanh.setText(tableModel.getValueAt(selectedRow, 4).toString());
                    txtTrangThai.setText(tableModel.getValueAt(selectedRow, 6).toString());
                }
            }
        });
    }

    // Khởi tạo model cho bảng
    private void initTable() {
        // Thêm cột "Tên nhân viên" và "Chi nhánh" vào bảng
        String[] columnNames = {"Mã TK", "Mã NV", "Tên NhânViên", "Chức Vụ", "Chi nhánh", "Mật khẩu", "Trạng thái"};
        tableModel = new DefaultTableModel(columnNames, 0);
        tblQuanLyTaiKhoan.setModel(tableModel);
    }
    private void loadDataTaiKhoan() {
        tableModel.setRowCount(0);
        List<DTO.TaiKhoan> tkList = tkBUS.getAllTaiKhoan();
        // Tạo instance của NhanVienBUS để lấy thông tin chi tiết của nhân viên
        BUS.NhanVienBUS nvBUS = new BUS.NhanVienBUS();
        for (DTO.TaiKhoan tk : tkList) {
            // Lấy thông tin nhân viên dựa trên maNV
            DTO.NhanVien nv = nvBUS.getNhanVienByMaNV(tk.getMaNV());
            String tenNV = (nv != null) ? nv.getTenNV() : "";
            String chiNhanh = (nv != null) ? nv.getChiNhanh() : "";
            Object[] row = {
                tk.getMaTK(),
                tk.getMaNV(),
                tenNV,
                tk.getChucVu(),
                chiNhanh,
                tk.getMatKhau(),
                tk.getTrangThai()
            };
            tableModel.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlQuanLyTaiKhoan = new javax.swing.JPanel();
        lblTimKiem = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btnXemTatCa = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        scrQuanLyTaiKhoan = new javax.swing.JScrollPane();
        tblQuanLyTaiKhoan = new javax.swing.JTable();
        pnlChiTietTaiKhoan = new javax.swing.JPanel();
        lblMaNhanVien = new javax.swing.JLabel();
        txtMaNhanVien = new javax.swing.JTextField();
        lblTenNhanVien = new javax.swing.JLabel();
        lblChiNhanh = new javax.swing.JLabel();
        txtChiNhanh = new javax.swing.JTextField();
        lblMatKhau = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JTextField();
        lblTrangThai = new javax.swing.JLabel();
        txtTenNhanVien = new javax.swing.JTextField();
        btnCapNhat = new javax.swing.JButton();
        lblChiTietTaiKhoan = new javax.swing.JLabel();
        txtTrangThai = new javax.swing.JTextField();
        lblMaTaiKhoan = new javax.swing.JLabel();
        txtMaTaiKhoan = new javax.swing.JTextField();

        setBackground(new java.awt.Color(135, 206, 235));
        setPreferredSize(new java.awt.Dimension(1140, 720));

        pnlQuanLyTaiKhoan.setBackground(new java.awt.Color(135, 206, 235));
        pnlQuanLyTaiKhoan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblTimKiem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTimKiem.setForeground(new java.awt.Color(0, 71, 171));
        lblTimKiem.setText("Tìm kiếm");
        lblTimKiem.setPreferredSize(new java.awt.Dimension(60, 30));

        txtTimKiem.setBackground(new java.awt.Color(237, 242, 251));
        txtTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTimKiem.setPreferredSize(new java.awt.Dimension(64, 30));

        btnXemTatCa.setBackground(new java.awt.Color(0, 100, 168));
        btnXemTatCa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXemTatCa.setForeground(new java.awt.Color(237, 242, 251));
        btnXemTatCa.setText("Xem tất cả");
        btnXemTatCa.setToolTipText("");
        btnXemTatCa.setAutoscrolls(true);
        btnXemTatCa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnXemTatCa.setPreferredSize(new java.awt.Dimension(95, 30));
        btnXemTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemTatCaActionPerformed(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(0, 100, 168));
        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(237, 242, 251));
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnTimKiem.setPreferredSize(new java.awt.Dimension(85, 30));
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        tblQuanLyTaiKhoan.setBackground(new java.awt.Color(237, 242, 251));
        tblQuanLyTaiKhoan.setForeground(new java.awt.Color(0, 71, 171));
        tblQuanLyTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Tài Khoản", "Mã Nhân Viên", "Tên Nhân Viên", "Chức Vụ", "Chi Nhánh", "Mật Khẩu", "Trạng Thái"
            }
        ));
        tblQuanLyTaiKhoan.setGridColor(new java.awt.Color(0, 71, 171));
        tblQuanLyTaiKhoan.setSelectionBackground(new java.awt.Color(80, 171, 231));
        scrQuanLyTaiKhoan.setViewportView(tblQuanLyTaiKhoan);
        tblQuanLyTaiKhoan.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout pnlQuanLyTaiKhoanLayout = new javax.swing.GroupLayout(pnlQuanLyTaiKhoan);
        pnlQuanLyTaiKhoan.setLayout(pnlQuanLyTaiKhoanLayout);
        pnlQuanLyTaiKhoanLayout.setHorizontalGroup(
            pnlQuanLyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuanLyTaiKhoanLayout.createSequentialGroup()
                .addGroup(pnlQuanLyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrQuanLyTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, 761, Short.MAX_VALUE)
                    .addGroup(pnlQuanLyTaiKhoanLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXemTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlQuanLyTaiKhoanLayout.setVerticalGroup(
            pnlQuanLyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuanLyTaiKhoanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuanLyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQuanLyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlQuanLyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnXemTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrQuanLyTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlChiTietTaiKhoan.setBackground(new java.awt.Color(135, 206, 235));
        pnlChiTietTaiKhoan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblMaNhanVien.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblMaNhanVien.setForeground(new java.awt.Color(0, 71, 171));
        lblMaNhanVien.setText("Mã Nhân Viên");

        txtMaNhanVien.setEditable(false);
        txtMaNhanVien.setBackground(new java.awt.Color(237, 242, 251));
        txtMaNhanVien.setEnabled(false);
        txtMaNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNhanVienActionPerformed(evt);
            }
        });

        lblTenNhanVien.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTenNhanVien.setForeground(new java.awt.Color(0, 71, 171));
        lblTenNhanVien.setText("Tên nhân viên");

        lblChiNhanh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblChiNhanh.setForeground(new java.awt.Color(0, 71, 171));
        lblChiNhanh.setText("Chi Nhánh");

        txtChiNhanh.setBackground(new java.awt.Color(237, 242, 251));
        txtChiNhanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChiNhanhActionPerformed(evt);
            }
        });

        lblMatKhau.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblMatKhau.setForeground(new java.awt.Color(0, 71, 171));
        lblMatKhau.setText("Mật Khẩu");

        txtMatKhau.setBackground(new java.awt.Color(237, 242, 251));

        lblTrangThai.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTrangThai.setForeground(new java.awt.Color(0, 71, 171));
        lblTrangThai.setText("Trạng Thái");

        txtTenNhanVien.setBackground(new java.awt.Color(237, 242, 251));

        btnCapNhat.setBackground(new java.awt.Color(0, 100, 168));
        btnCapNhat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCapNhat.setForeground(new java.awt.Color(237, 242, 251));
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        lblChiTietTaiKhoan.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        lblChiTietTaiKhoan.setForeground(new java.awt.Color(0, 71, 171));
        lblChiTietTaiKhoan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChiTietTaiKhoan.setText("Chi Tiết Tài Khoản");

        txtTrangThai.setBackground(new java.awt.Color(237, 242, 251));
        txtTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTrangThaiActionPerformed(evt);
            }
        });

        lblMaTaiKhoan.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblMaTaiKhoan.setForeground(new java.awt.Color(0, 71, 171));
        lblMaTaiKhoan.setText("Mã Tài Khoản");

        txtMaTaiKhoan.setEditable(false);
        txtMaTaiKhoan.setBackground(new java.awt.Color(237, 242, 251));
        txtMaTaiKhoan.setEnabled(false);
        txtMaTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaTaiKhoanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlChiTietTaiKhoanLayout = new javax.swing.GroupLayout(pnlChiTietTaiKhoan);
        pnlChiTietTaiKhoan.setLayout(pnlChiTietTaiKhoanLayout);
        pnlChiTietTaiKhoanLayout.setHorizontalGroup(
            pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChiTietTaiKhoanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChiTietTaiKhoan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChiTietTaiKhoanLayout.createSequentialGroup()
                        .addGroup(pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMatKhau)
                            .addComponent(lblTenNhanVien)
                            .addComponent(lblChiNhanh)
                            .addComponent(lblTrangThai)
                            .addComponent(lblMaNhanVien))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                            .addComponent(txtTrangThai)
                            .addComponent(txtChiNhanh)
                            .addComponent(txtMatKhau)
                            .addComponent(txtTenNhanVien)))
                    .addGroup(pnlChiTietTaiKhoanLayout.createSequentialGroup()
                        .addComponent(lblMaTaiKhoan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMaTaiKhoan)))
                .addGap(58, 58, 58))
        );
        pnlChiTietTaiKhoanLayout.setVerticalGroup(
            pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChiTietTaiKhoanLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblChiTietTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaTaiKhoan)
                    .addComponent(txtMaTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaNhanVien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTenNhanVien, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMatKhau, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblChiNhanh)
                    .addComponent(txtChiNhanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChiTietTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTrangThai)
                    .addComponent(txtTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 438, Short.MAX_VALUE)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlQuanLyTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlChiTietTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 351, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlChiTietTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlQuanLyTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNhanVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNhanVienActionPerformed

    private void txtChiNhanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChiNhanhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChiNhanhActionPerformed

    private void txtTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTrangThaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTrangThaiActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblQuanLyTaiKhoan.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn tài khoản để cập nhật!");
            return;
        }
        try {
            // Lấy mã NV và mã TK từ các ô chi tiết (mã TK phải có sẵn trên giao diện, ví dụ: txtMaTaiKhoan)
            int maNV = Integer.parseInt(txtMaNhanVien.getText().trim());
            int maTK = Integer.parseInt(txtMaTaiKhoan.getText().trim());

            // Lấy dữ liệu hiện tại từ database
            BUS.NhanVienBUS nvBUS = new BUS.NhanVienBUS();
            DTO.NhanVien nvCurrent = nvBUS.getNhanVienByMaNV(maNV);

            BUS.TaiKhoanBUS tkBUS = new BUS.TaiKhoanBUS();
            DTO.TaiKhoan tkCurrent = tkBUS.getTaiKhoanByMaNV(maNV);

            // Nếu không nhập dữ liệu mới ở các ô, giữ nguyên giá trị cũ
            String tenNV = txtTenNhanVien.getText().trim();
            if (tenNV.isEmpty() && nvCurrent != null) {
                tenNV = nvCurrent.getTenNV();
            }
            String chiNhanh = txtChiNhanh.getText().trim();
            if (chiNhanh.isEmpty() && nvCurrent != null) {
                chiNhanh = nvCurrent.getChiNhanh();
            }

            String matKhau = txtMatKhau.getText().trim();
            if (matKhau.isEmpty() && tkCurrent != null) {
                matKhau = tkCurrent.getMatKhau();
            }
            // Vì giao diện không có ô chức vụ, nên lấy luôn giá trị chức vụ từ tkCurrent
            String chucVu = "";
            if (tkCurrent != null) {
                chucVu = tkCurrent.getChucVu();
            }
            String trangThai = txtTrangThai.getText().trim();
            if (trangThai.isEmpty() && tkCurrent != null) {
                trangThai = tkCurrent.getTrangThai();
            }

            // Tạo đối tượng cập nhật cho NhanVien
            DTO.NhanVien nvUpdate = new DTO.NhanVien();
            nvUpdate.setMaNV(maNV);
            nvUpdate.setTenNV(tenNV);
            nvUpdate.setChiNhanh(chiNhanh);
            // Giữ nguyên các trường khác không thay đổi
            if(nvCurrent != null){
                nvUpdate.setNgaySinh(nvCurrent.getNgaySinh());
                nvUpdate.setGioiTinh(nvCurrent.getGioiTinh());
                nvUpdate.setSdt(nvCurrent.getSdt());
                nvUpdate.setEmail(nvCurrent.getEmail());
                nvUpdate.setDiaChi(nvCurrent.getDiaChi());
                nvUpdate.setNgayVaoLam(nvCurrent.getNgayVaoLam());
                nvUpdate.setTrangThai(nvCurrent.getTrangThai());
            }

            boolean updatedNV = nvBUS.updateNhanVien(nvUpdate);

            // Tạo đối tượng cập nhật cho TaiKhoan
            DTO.TaiKhoan tkUpdate = new DTO.TaiKhoan();
            tkUpdate.setMaTK(maTK);
            tkUpdate.setMaNV(maNV);
            tkUpdate.setMatKhau(matKhau);
            tkUpdate.setChucVu(chucVu);      // Lấy từ tkCurrent
            tkUpdate.setTrangThai(trangThai);

            boolean updatedTK = tkBUS.updateTaiKhoan(tkUpdate);

            if (updatedNV && updatedTK) {
                JOptionPane.showMessageDialog(this, "Cập nhật tài khoản thành công!");
                loadDataTaiKhoan();
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật tài khoản thất bại!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi dữ liệu: " + ex.getMessage());
        }

    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String keyword = txtTimKiem.getText().trim();
            // Nếu từ khóa rỗng, load lại toàn bộ dữ liệu
            if (keyword.isEmpty()) {
                loadDataTaiKhoan();
                return;
            }

            // Lấy danh sách tài khoản từ BUS
            List<DTO.TaiKhoan> allList = tkBUS.getAllTaiKhoan();
            List<DTO.TaiKhoan> result = new ArrayList<>();
            BUS.NhanVienBUS nvBUS = new BUS.NhanVienBUS();

            // Chuyển từ khóa sang chữ thường để so sánh
            String lowerKeyword = keyword.toLowerCase();

            // Duyệt qua từng tài khoản
            for (DTO.TaiKhoan tk : allList) {
                // Lấy thông tin nhân viên tương ứng từ mã NV
                DTO.NhanVien nv = nvBUS.getNhanVienByMaNV(tk.getMaNV());
                // Nếu có, lấy tên nhân viên; nếu không, để rỗng
                String tenNV = (nv != null) ? nv.getTenNV().toLowerCase() : "";
                // Chuyển mã NV thành chuỗi
                String maNVStr = String.valueOf(tk.getMaNV());

                // Nếu từ khóa khớp với mã NV (hoặc một phần của nó) hoặc với tên NV, thêm vào kết quả
                if (maNVStr.contains(keyword) || tenNV.contains(lowerKeyword)) {
                    result.add(tk);
                }
            }

            // Cập nhật lại bảng
            tableModel.setRowCount(0);
            if (result.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy tài khoản nào phù hợp với từ khóa: " + keyword);
            } else {
                for (DTO.TaiKhoan tk : result) {
                    DTO.NhanVien nv = nvBUS.getNhanVienByMaNV(tk.getMaNV());
                    String tenNV = (nv != null) ? nv.getTenNV() : "";
                    String chiNhanh = (nv != null) ? nv.getChiNhanh() : "";
                    Object[] row = {
                        tk.getMaNV(),
                        tenNV,
                        tk.getChucVu(),
                        chiNhanh,
                        tk.getMatKhau(),
                        tk.getTrangThai()
                    };
                    tableModel.addRow(row);
                }
            }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXemTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemTatCaActionPerformed
        // TODO add your handling code here:
        loadDataTaiKhoan();
    }//GEN-LAST:event_btnXemTatCaActionPerformed

    private void txtMaTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaTaiKhoanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaTaiKhoanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXemTatCa;
    private javax.swing.JLabel lblChiNhanh;
    private javax.swing.JLabel lblChiTietTaiKhoan;
    private javax.swing.JLabel lblMaNhanVien;
    private javax.swing.JLabel lblMaTaiKhoan;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JLabel lblTenNhanVien;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JPanel pnlChiTietTaiKhoan;
    private javax.swing.JPanel pnlQuanLyTaiKhoan;
    private javax.swing.JScrollPane scrQuanLyTaiKhoan;
    private javax.swing.JTable tblQuanLyTaiKhoan;
    private javax.swing.JTextField txtChiNhanh;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtMaTaiKhoan;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtTenNhanVien;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTrangThai;
    // End of variables declaration//GEN-END:variables

}